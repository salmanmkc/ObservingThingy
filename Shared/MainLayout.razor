@inherits LayoutComponentBase

@using ObservingThingy.Data
@using ObservingThingy.DataAccess

@* @inject HostsRepository _hostsrepo *@
@inject HostListsRepository _hostlistsrepo
@inject IJSRuntime _js;

<div class="ui teal attached inverted menu">
    <a href="" class="header item">ObservingThingy</a>

    <NavLink href="/views/0" class="ui item" Match="NavLinkMatch.All">All</NavLink>

    <div class="ui dropdown item">
        Lists
        <i class="dropdown icon"></i>
        <div class="menu">
            @foreach (var hostlist in hostlists)
            {
                <a href="/views/@hostlist.Id" class="item">@hostlist.Name</a>
            }
        </div>
    </div>

    <div class="right menu">
        <div class="ui borderless dropdown item">
            <i class="ellipsis vertical icon"></i>
            <div class="menu">
                <div class="header">Configuration</div>
                <NavLink href="/config/hosts" class="item" Match="NavLinkMatch.All">Hosts</NavLink>
                <NavLink href="/config/hostlists" class="item" Match="NavLinkMatch.All">Host Lists</NavLink>
                <NavLink href="/config/tags" class="item" Match="NavLinkMatch.All">Tags</NavLink>
            </div>
        </div>
    </div>
</div>

<div class="ui fluid container">
    @Body
</div>

@code {

    List<HostList> hostlists { get; set; }

    protected override async Task OnInitAsync()
    {
        hostlists = await _hostlistsrepo.GetAll();
    }

    protected override async Task OnAfterRenderAsync()
    {
        await _js.InvokeAsync<bool>("semanticApplyDropdown");
    }
}