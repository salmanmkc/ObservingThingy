@inherits LayoutComponentBase

@using ObservingThingy.Data
@using ObservingThingy.DataAccess

@* @inject HostsRepository _hostsrepo *@
@inject HostListsRepository _hostlistsrepo
@inject IJSRuntime _js;

<div class="ui attached inverted menu">
    <a href="" class="header item">ObservingThingy</a>

    <NavLink href="/" class="ui item" Match="NavLinkMatch.All">Home</NavLink>

    <div class="ui dropdown item">
        Hostlists
        <i class="dropdown icon"></i>
        <div class="menu">
            <a href="/views/0" class="item">All</a>
            <div class="divider"></div>
            @foreach (var hostlist in hostlists)
            {
                <a href="/views/@hostlist.Id" class="item">@hostlist.Name</a>
            }
        </div>
    </div>

    <div class="ui disabled item">
        Profiles
    </div>

    <div class="ui dropdown item">
        Config
        <i class="dropdown icon"></i>
        <div class="menu">
            <NavLink href="/config/hosts" class="item" Match="NavLinkMatch.All">Hosts</NavLink>
            <NavLink href="/config/hostlists" class="item" Match="NavLinkMatch.All">Host Lists</NavLink>
        </div>
    </div>
</div>

<div class="ui fluid container">
    @Body
</div>

@code {

    List<HostList> hostlists { get; set; }

    protected override async Task OnInitAsync()
    {
        hostlists = await _hostlistsrepo.GetAll();
    }

    protected override async Task OnAfterRenderAsync()
    {
        await _js.InvokeAsync<bool>("semanticApplyDropdown");
    }
}